// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250405224240_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("shop")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("create_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("customers", "shop");
                });

            modelBuilder.Entity("Api.Domain.Entities.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("create_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("name")
                        .HasColumnType("integer");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("products", "shop");
                });

            modelBuilder.Entity("Api.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("create_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("update_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("sales", "shop");
                });

            modelBuilder.Entity("Api.Domain.Entities.SaleItem", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("integer");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("sale_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("product_id");

                    b.ToTable("sales_items", "shop");
                });

            modelBuilder.Entity("Api.Domain.Entities.SaleItem", b =>
                {
                    b.HasOne("Api.Domain.Entities.Sale", "sale")
                        .WithMany("sale_items")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.Product", "product")
                        .WithMany("sale_items")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("sale");
                });

            modelBuilder.Entity("Api.Domain.Entities.Product", b =>
                {
                    b.Navigation("sale_items");
                });

            modelBuilder.Entity("Api.Domain.Entities.Sale", b =>
                {
                    b.Navigation("sale_items");
                });
#pragma warning restore 612, 618
        }
    }
}
